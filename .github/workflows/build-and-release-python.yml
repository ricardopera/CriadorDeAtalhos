name: Build and Release - Python Implementation

on:
  push:
    branches:
      - python-implementation
    tags:
      - 'v*-py'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: true
        default: 'true'
        type: boolean
      version_tag:
        description: 'Version tag (e.g., v1.0.3-py)'
        required: true
        default: 'v1.0.3-py'
        type: string

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        
    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name "CriadorDeAtalhos" --icon="favicon.ico" --add-data "favicon.ico;." --distpath "./publish/python-win-x64" --workpath "./build" --specpath "./build" criador_atalhos.py
        
    - name: Create version info
      run: |
        $version = "${{ github.event.inputs.version_tag || github.ref_name }}"
        $versionInfo = @"
        Version: $version
        Build Date: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
        Commit: ${{ github.sha }}
        Python Implementation
        "@
        $versionInfo | Out-File -FilePath "./publish/python-win-x64/version.txt" -Encoding UTF8
      shell: pwsh
      
    - name: Check executable size
      run: |
        if (Test-Path "./publish/python-win-x64/CriadorDeAtalhos.exe") {
          $fileSize = (Get-Item "./publish/python-win-x64/CriadorDeAtalhos.exe").Length
          $fileSizeMB = [Math]::Round($fileSize / 1MB, 2)
          Write-Host "Executable size: $fileSizeMB MB"
          echo "EXECUTABLE_SIZE_MB=$fileSizeMB" >> $env:GITHUB_ENV
        }
      shell: pwsh
      
    - name: Create ZIP archive
      run: |
        $version = "${{ github.event.inputs.version_tag || github.ref_name }}"
        Compress-Archive -Path "./publish/python-win-x64/*" -DestinationPath "./CriadorDeAtalhos-$version-win-x64.zip"
      shell: pwsh
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CriadorDeAtalhos-python-build
        path: |
          ./publish/python-win-x64/
          ./CriadorDeAtalhos-*.zip
          
  release:
    needs: build
    runs-on: windows-latest
    if: github.event.inputs.create_release == 'true' || startsWith(github.ref, 'refs/tags/')
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: CriadorDeAtalhos-python-build
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.version_tag || github.ref_name }}
        name: Release ${{ github.event.inputs.version_tag || github.ref_name }} - Python Implementation
        body: |
          ## Criador de Atalhos - Release ${{ github.event.inputs.version_tag || github.ref_name }} (Python Implementation)
          
          ### üêç Implementa√ß√£o Python - Execut√°vel Reduzido
          Esta vers√£o utiliza Python + tkinter para criar um execut√°vel significativamente menor (~10-20 MB vs ~70-90 MB da vers√£o C#).
          
          ### üì¶ Execut√°vel Autocontido
          Este release inclui um execut√°vel autocontido para Windows x64 que n√£o requer instala√ß√£o de Python ou depend√™ncias.
          
          ### ‚ö° Vantagens desta Vers√£o
          - **Tamanho reduzido**: ~10-20 MB (vs ~70-90 MB da vers√£o C#)
          - **Inicializa√ß√£o mais r√°pida**: Menor tempo de carregamento
          - **Mesmo funcionalidades**: Interface e recursos id√™nticos
          - **Downloads mais r√°pidos**: Arquivo menor para distribui√ß√£o
          
          ### üìã Como usar
          1. Baixe o arquivo `CriadorDeAtalhos-${{ github.event.inputs.version_tag || github.ref_name }}-win-x64.zip`
          2. Extraia o conte√∫do para uma pasta de sua escolha
          3. Execute `CriadorDeAtalhos.exe`
          
          ### üéØ Funcionalidades
          - Interface gr√°fica intuitiva para criar atalhos
          - Suporte a arquivos e diret√≥rios
          - Detec√ß√£o autom√°tica da √°rea de transfer√™ncia
          - Cria√ß√£o de atalhos na √°rea de trabalho ou local personalizado
          - Preven√ß√£o autom√°tica de conflitos de nomes
          - Abertura autom√°tica da pasta ap√≥s cria√ß√£o do atalho
          
          ### üíª Requisitos do Sistema
          - Windows 10 ou superior
          - Arquitetura x64
          - Sem depend√™ncias adicionais necess√°rias
          
          ### üîß Informa√ß√µes T√©cnicas
          - **Linguagem**: Python 3.11
          - **Interface**: tkinter (nativo)
          - **Empacotamento**: PyInstaller
          - **Tamanho aproximado**: ~${{ env.EXECUTABLE_SIZE_MB || '10-20' }} MB
          - **Build Date**: $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')
          - **Commit**: ${{ github.sha }}
          
          ### üîÑ Compara√ß√£o com Vers√£o C#
          | Caracter√≠stica | Python | C# |
          |---|---|---|
          | Tamanho do execut√°vel | ~10-20 MB | ~70-90 MB |
          | Tempo de inicializa√ß√£o | R√°pido | Moderado |
          | Funcionalidades | Id√™nticas | Id√™nticas |
          | Depend√™ncias | Nenhuma | Nenhuma |
        files: |
          CriadorDeAtalhos-*.zip
        draft: false
        prerelease: false